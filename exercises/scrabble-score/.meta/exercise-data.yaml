exercise: ScrabbleScore
plan: 12
subs: score
tests: |-
  for my $case ( @{ $C_DATA->{cases} } ) {
    is score($case->{input}{word}), $case->{expected}, $case->{description};
  }

example: |-
  use List::Util qw(sum0 pairmap);

  my $scores = {
      pairmap { map { $_ => $a } split //, $b } qw(
           1 aeioulnrst
           2 dg
           3 bcmp
           4 fhvwy
           5 k
           8 jx
          10 qz
      )
  };

  sub score {
      my ($word, %extensions) = @_;
      my $double = $extensions{double} // 0;
      my $triple = $extensions{triple} // 0;
      return sum0 map {
          $scores->{$_} * 2 ** $double
                        * 3 ** $triple
      } split //, lc $word;
  }

stub: |-
  sub score {
    my ($word, %extensions) = @_;
    return undef;
  }
