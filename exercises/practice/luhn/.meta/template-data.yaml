subs: is_luhn_valid

properties:
  valid:
    test: |-
      use Data::Dmp;
      $Data::Dmp::OPT_STRINGIFY_NUMBERS = 1;
      sprintf(<<'END', dmp($case->{input}{value}), $case->{expected} ? ('T', '# True') : ('DF', '# Defined but False'), dmp($case->{description}));
      is(
          is_luhn_valid(%s),
          %s, %s
          %s,
      );
      END


example: |-
  sub is_luhn_valid ($number) {
      $number =~ s/\s+//g;
      if (length $number < 2 || $number =~ /\D+/) {return 0}

      my @num = split(//, $number);
      unshift @num, 0 if scalar @num % 2;

      my $count = 1;
      my $sum = 0;

      for (@num) {
          if ($count % 2) {
              $sum += $_ * 2;
              $sum -= 9 if $_ * 2 > 9;
          }
          else {
              $sum += $_;
          }
          $count += 1;
      }

      if ($sum % 10) {return 0};
      return 1;
  }

stub: |-
  sub is_luhn_valid ($number) {
      return undef;
  }
