subs: match_anagrams

properties:
  findAnagrams:
    test: |-
      use Data::Dmp;
      sprintf(<<'END', (map {dmp($_)} @{$case->{input}}{qw<subject candidates>}), "bag {\n" . (join '', map {'item ' . dmp($_) . ";\n"} @{$case->{expected}}) . "end;\n}", dmp($case->{description}));
      is(
          match_anagrams( %s, %s ),
          %s,
          %s,
      );
      END

example: |-
  sub match_anagrams ($subject, $candidates) {

    return [
      grep {
        lc $_ ne lc $subject
          && join( '', sort( split( //, lc $_ ) ) ) eq
          join( '', sort( split( //, lc $subject ) ) )
      } @{ $candidates }
    ];
  }

stub: |-
  sub match_anagrams ($subject, $candidates) {
      return undef;
  }
