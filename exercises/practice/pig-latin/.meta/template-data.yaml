subs: translate

properties:
  translate:
    test: |-
      use Data::Dmp;
      sprintf(<<~'END', map {dmp $_} $case->{input}{phrase}, $case->@{qw<expected description>});
      is(
          translate(%s),
          %s,
          %s,
      );
      END

example: |
  sub translate ($phrase) {
    return join(' ', map {
      if (/^(?:[aeiou]|[yx][^aeiou])/) {
        "${phrase}ay"
      }
      elsif (/^(y|[^aeiou]*qu|[^aeiouy]+)(.+)/) {
        "$2${1}ay"
      }
    } split /\s+/, $phrase);

  }

stub: |
  sub translate {
    my ($phrase) = @_;
    return undef;
  }
