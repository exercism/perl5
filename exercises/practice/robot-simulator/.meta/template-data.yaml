moo: true
package: Robot
tests: |
  my $robot;
properties:
  move:
    test: |-
      use Data::Dmp;
      sprintf(<<~'END', @{$case->{input}{position}}{qw<x y>}, dmp($case->{input}{direction}), dmp($case->{input}{instructions}), @{$case->{expected}{position}}{qw<x y>}, dmp($case->{expected}{direction}), dmp($case->{description}));
      $robot = Robot->new( x => %d, y => %d, direction => %s )->enact( %s );
      is(
          $robot,
          object {
              call x         => %d;
              call y         => %d;
              call direction => %s;
          },
          %s,
      );
      END

example: |-
  has x => (
      is => 'rwp',
  );

  has y => (
      is => 'rwp',
  );

  has direction => (
      is => 'rwp',
  );
  
  sub enact {
      my ($self) = @_;
      return $self;
  }

stub: |-
  has x => (
      is => 'rwp',
  );

  has y => (
      is => 'rwp',
  );

  has direction => (
      is => 'rwp',
  );

  sub enact {
      my ($self) = @_;
      return $self;
  }
