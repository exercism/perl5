class: true
package: Robot
properties:
  move:
    test: |-
      use Data::Dmp;
      sprintf(<<~'END', dmp($case->{description}), @{$case->{input}{position}}{qw<x y>}, dmp($case->{input}{direction}), dmp($case->{input}{instructions}), @{$case->{expected}{position}}{qw<x y>}, dmp($case->{expected}{direction}));
      subtest %s => sub {
          my $robot = Robot->new( x => %d, y => %d, direction => %s )->enact( %s );
          is( $robot->x, %d, "x" );
          is( $robot->y, %d, "y" );
          is( $robot->direction, %s, "direction");
      };
      END

example: |-
  field $x :reader :param;
  field $y :reader :param;
  field $direction :reader :param;

  method enact ($instructions) {
      for my $step (split //, $instructions) {
          if ( $step eq 'A' ) {
              if ($direction eq 'north') {
                  $y += 1;
              }
              elsif ($direction eq 'south') {
                  $y -= 1;
              }
              elsif ($direction eq 'east') {
                  $x += 1;
              }
              elsif ($direction eq 'west') {
                  $x -= 1;
              }
          }
          elsif ($step eq 'L') {
              if ($direction eq 'north') {
                  $direction = 'west';
              }
              elsif ($direction eq 'west') {
                  $direction = 'south';
              }
              elsif ($direction eq 'south') {
                  $direction = 'east';
              }
              elsif ($direction eq 'east') {
                  $direction = 'north';
              }
          }
          elsif ($step eq 'R') {
              if ($direction eq 'north') {
                  $direction = 'east';
              }
              elsif ($direction eq 'east') {
                  $direction = 'south';
              }
              elsif ($direction eq 'south') {
                  $direction = 'west';
              }
              elsif ($direction eq 'west') {
                  $direction = 'north';
              }
          }
      }

      return $self;
  }

stub: |-
  field $x :reader :param;
  field $y :reader :param;
  field $direction :reader :param;

  method enact ($instructions) {
      return $self;
  }
