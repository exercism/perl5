subs: sum_of_multiples

properties:
  sum:
    test: |-
      use Data::Dmp;
      sprintf(<<'END', dmp($case->{input}{factors}), $case->{input}{limit}, $case->{expected}, dmp($case->{description}));
      is(
          sum_of_multiples( %s, %s ),
          %s,
          %s,
      );
      END

example: |-
  sub sum_of_multiples {
      my ($factors, $limit) = @_;

      $factors = [ grep { $_ > 0 } @{$factors} ];
      my %multiples;

      for my $factor (@$factors) {
          for (my $i = 1; $i * $factor < $limit; $i++) {
              $multiples{$i * $factor} = 1;
          }
      }
      my $sum = 0;
      for my $multiple (keys %multiples) {
          $sum += $multiple;
      }

      return $sum;
  }

stub: |-
  sub sum_of_multiples {
      my ( $factors, $limit ) = @_;
      return undef;
  }
