subs: extract_row extract_column

properties:
  row:
    test: |-
      use Data::Dmp;
      local $Data::Dmp::OPT_STRINGIFY_NUMBERS = 1;
      sprintf(<<'END', dmp($case->{input}{string}), $case->{input}{index}, map {dmp($_)} @{$case}{qw<expected description>});
      is(
          extract_row(%s, %s),
          %s,
          %s,
      );
      END
  column:
    test: |-
      use Data::Dmp;
      local $Data::Dmp::OPT_STRINGIFY_NUMBERS = 1;
      sprintf(<<'END', dmp($case->{input}{string}), $case->{input}{index}, map {dmp($_)} @{$case}{qw<expected description>});
      is(
          extract_column(%s, %s),
          %s,
          %s,
      );
      END

example: |-
  sub extract_row ($matrix, $row) {
      return [split / /, [split /\n/, $matrix]->[$row - 1]];
  }

  sub extract_column ($matrix, $column) {
      return [map { [split / /, $_]->[$column - 1] } split /\n/, $matrix];
  }

stub: |-
  sub extract_row ($matrix, $row) {
      return undef;
  }

  sub extract_column ($matrix, $column) {
      return undef;
  }
