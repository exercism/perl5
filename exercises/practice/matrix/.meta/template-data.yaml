
properties:
  row:
    test: |-
      use Data::Dmp;
      $Data::Dmp::OPT_STRINGIFY_NUMBERS = 1;
      sprintf(<<'END', dmp($case->{input}{string}), $case->{input}{index}, map {dmp($_)} @{$case}{qw<expected description>});
      is(
          Matrix->new( string => %s )->row(%s),
          %s,
          %s,
      );
      END
  column:
    test: |-
      use Data::Dmp;
      $Data::Dmp::OPT_STRINGIFY_NUMBERS = 1;
      sprintf(<<'END', dmp($case->{input}{string}), $case->{input}{index}, map {dmp($_)} @{$case}{qw<expected description>});
      is(
          Matrix->new( string => %s )->column(%s),
          %s,
          %s,
      );
      END

moo: true

example: |-
  has string => (
      is => 'ro',
  );

  sub row ($self, $index) {
      return [split / /, [split /\n/, $self->string]->[$index - 1]];
  }

  sub column ($self, $index) {
      return [map { [split / /, $_]->[$index - 1] } split /\n/, $self->string];
  }

stub: |-
  has string => (
      is => 'ro',
  );

  sub row ($self, $index) {
      return undef;
  }

  sub column ($self, $index) {
      return undef;
  }
