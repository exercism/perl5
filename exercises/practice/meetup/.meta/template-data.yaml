subs: meetup

properties:
  meetup:
    test: |-
      use Data::Dmp;
      use constant MONTHS => qw<
        January February March     April   May      June
        July    August   September October November December
      >;
      my $input_string = sprintf( '%s %s of %s %u',
        ucfirst( $case->{input}{week} ),
        $case->{input}{dayofweek},
        (MONTHS)[ $case->{input}{month} - 1 ],
        $case->{input}{year} );

      sprintf(<<'END', map {dmp($_)} $input_string, @{$case}{qw<expected description>});
      is(
          meetup(%s),
          %s,
          %s,
      );
      END


example: |
  use Time::Piece;
  use Time::Seconds;

  use constant WEEKS => {
    First  => 1,
    Second => 8,
    Teenth => 13,
    Third  => 15,
    Fourth => 22,
  };

  sub meetup {
    my ($desc) = @_;
    $desc =~ /^(\w+) (\w+) of (\w+) (\d+)$/;

    my $t = Time::Piece->strptime( ( WEEKS->{$1} // 1 ) . " $3 $4",
      '%d %B %Y' );

    if ( $1 eq 'Last' ) {
      $t = $t->add_months(1) - ONE_WEEK;
    }

    until ( $t->fullday eq $2 ) {
      $t += ONE_DAY;
    }

    return $t->ymd;
  }

stub: |
  sub meetup {
      my ($desc) = @_;
      return undef;
  }
