subs: hey
properties:
  response:
    test: |-
      use Data::Dmp;
      sprintf(<<'END', map {dmp($_)} $case->{input}{heyBob}, @{$case}{qw<expected description>});
      is(
          hey(%s),
          %s,
          %s,
      );
      END

lib_comment: '# Find modules in the same dir as this file.'
package_comment: "# Declare package 'Bob'"
feature_comment: '# Use the `say` function to output debugging info in the online editor.'

example: |-
  sub hey {
    my ($text) = @_;
    if (uc($text) eq $text && $text =~ /\p{Uppercase}/) {
      return 'Calm down, I know what I\'m doing!' if $text =~ /\?\s*$/;
      return 'Whoa, chill out!';
    }
    return 'Fine. Be that way!' if $text =~ /^\s*$/;
    return 'Sure.' if $text =~ /\?\s*$/;
    return 'Whatever.';
  }

stub: |-
  sub hey {
    my ($msg) = @_;
    return undef; # Replace this with your own code to pass the tests.
  }
