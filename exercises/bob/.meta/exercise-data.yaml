exercise: Bob
plan: 26
subs: hey
tests: |-
  is hey($_->{input}{heyBob}), $_->{expected}, $_->{description} foreach @{$C_DATA->{cases}};

lib_comment: '# Look for modules inside the same dir as this file.'
plan_comment: '# This is how many tests we expect to run.'
use_test_comment: '# Check that the module can be use-d.'

example: |-
  sub hey {
    my ($text) = @_;
    if (uc($text) eq $text && $text =~ /\p{Uppercase}/) {
      return 'Calm down, I know what I\'m doing!' if $text =~ /\?\s*$/;
      return 'Whoa, chill out!';
    }
    return 'Fine. Be that way!' if $text =~ /^\s*$/;
    return 'Sure.' if $text =~ /\?\s*$/;
    return 'Whatever.';
  }

stub: |-
  sub hey {
    my ($msg) = @_;
    # Remove the comments and write some code here to pass the test suite.
  }

package_comment: "# Declare package 'Bob'"
