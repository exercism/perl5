exercise: BeerSong
plan: 9
subs: sing
tests: |-
  for my $case ( recurse_cases() ) {
    is(
      sing({
        bottles => $case->{input}{startBottles},
        verses  => $case->{input}{takeDown},
      }),
      join("\n", @{$case->{expected}}),
      $case->{description}
    );
  }

  sub recurse_cases {
    my $obj = shift // $C_DATA;
    return $obj->{cases}
      ? map recurse_cases($_), @{ $obj->{cases} }
      : $obj
  }

example: |-
  sub sing {
    my ($input) = @_;
    return undef;
  }

stub: |-
  sub sing {
    my ($input) = @_;
    return undef;
  }
